<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Material.Components.Controls"
    xmlns:icons="clr-namespace:Material.Components.Icons"
    xmlns:shapes="clr-namespace:Material.Components.Shapes">

    <Style TargetType="{x:Type controls:IconButton}">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Kind" Value="Standard" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="icons:IconAssist.Size" Value="24" />
        <Setter Property="shapes:ShapeAssist.Style" Value="Full" />
        <Setter Property="controls:FocusIndicator.Brush" Value="{DynamicResource MaterialColorSecondary}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <controls:StateLayer
                        Margin="4"
                        IsHovered="{TemplateBinding IsMouseOver}"
                        IsPressed="{TemplateBinding IsPressed}"
                        Shape="{Binding ElementName=Container, Path=Shape}"
                        Tint="{TemplateBinding Foreground}">

                        <controls:FocusIndicator Shape="{Binding ElementName=Container, Path=Shape}">
                            <controls:Ripple Shape="{Binding ElementName=Container, Path=Shape}" Tint="{TemplateBinding Foreground}">
                                <controls:Container
                                    x:Name="Container"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">

                                    <controls:SymbolIcon
                                        Width="{TemplateBinding icons:IconAssist.Size}"
                                        Height="{TemplateBinding icons:IconAssist.Size}"
                                        Foreground="{TemplateBinding Foreground}" />
                                </controls:Container>
                            </controls:Ripple>
                        </controls:FocusIndicator>
                    </controls:StateLayer>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Container" Property="ChildOpacity" Value="0.38" />
                            <Setter TargetName="Container" Property="SurfaceOpacity" Value="0.12" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Kind" Value="Outlined">
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Standard" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnSurfaceVariant}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Standard" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnSurface}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Filled" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MaterialColorPrimary}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnPrimary}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Filled" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MaterialColorOnSurface}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnSurface}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Tonal" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MaterialColorSecondaryContainer}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnSecondaryContainer}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Tonal" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MaterialColorOnSurface}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnSurface}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Outlined" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialColorOutline}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnSurfaceVariant}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Kind" Value="Outlined" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialColorOnSurface}" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialColorOnSurface}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>